{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","setSongs","setCurrentSong","currentSong","isPlaying","songs","setisPlaying","setsongInfo","songInfo","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercent","className","currentTime","style","background","color","onChange","e","target","value","min","max","duration","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","LibrarySong","songSelectHandler","Library","LibraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuid4","App","useRef","useState","data","timeUpdateHandler","animation","round","songEndHandler","onLoadedMetadata","onTimeUpdate","ref","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2247f32d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPlay,faAngleLeft,faAngleRight,faPause} from \"@fortawesome/free-solid-svg-icons\";\r\n \r\nconst Player = ({audioRef, setSongs ,setCurrentSong,currentSong,isPlaying, songs, setisPlaying,setsongInfo,songInfo}) =>{\r\n    \r\n    const activeLibraryHandler = (nextPrev) =>{\r\n        const newSongs = songs.map((song)=>{\r\n            if(song.id === nextPrev.id)\r\n            {\r\n                return{\r\n                    ...song,\r\n                    active:true,\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...song,\r\n                    active:false, \r\n                }\r\n            }\r\n        })\r\n        setSongs(newSongs);\r\n    }\r\n\r\n    //Event Handlers\r\n    const playSongHandler = () =>{\r\n        if(isPlaying){\r\n            audioRef.current.pause();\r\n            setisPlaying(!isPlaying);\r\n        }\r\n        else{\r\n            audioRef.current.play();\r\n            setisPlaying(!isPlaying);\r\n        }\r\n};\r\n    \r\n    const getTime = (time) =>{\r\n        return(\r\n            Math.floor(time/60) + \":\" + (\"0\" + Math.floor(time%60)).slice(-2)\r\n        );\r\n    };\r\n    \r\n    const dragHandler  = (e)=>{\r\n        audioRef.current.currentTime = e.target.value;\r\n        setsongInfo({...songInfo, currentTime: e.target.value});\r\n    }\r\n    const skipTrackHandler = async (direction) =>{\r\n        let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n        if(direction==='skip-forward')\r\n        {\r\n            await setCurrentSong(songs[(currentIndex+1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex+1) % songs.length])\r\n        }\r\n        if(direction==='skip-back')\r\n        {\r\n            if(currentIndex===0)\r\n            {\r\n                currentIndex = songs.length;\r\n            } \r\n            await setCurrentSong(songs[(currentIndex-1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex-1) % songs.length])\r\n        }\r\n        if(isPlaying) audioRef.current.play()\r\n    }\r\n    //Styles\r\n    const trackAnim ={\r\n        transform: `translateX(${songInfo.animationPercent}%)`\r\n    }\r\n    \r\n    return(\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n             <p>{getTime(songInfo.currentTime)}</p>\r\n             <div style={{background:`linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`}} className=\"track\">\r\n            <input onChange={dragHandler} min={0} max={songInfo.duration || 0} value={songInfo.currentTime} type=\"range\" />\r\n            <div style={trackAnim} className=\"animate-track\"> </div>\r\n            </div>\r\n             <p>{songInfo.duration? getTime(songInfo.duration): \"0:00\"}</p>\r\n\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon ={faAngleLeft} />\r\n                <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" \r\n                icon ={isPlaying? faPause: faPlay} />\r\n                <FontAwesomeIcon onClick={() => skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon ={faAngleRight} />\r\n\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player; ","import React from \"react\";\r\n\r\nconst Song = ({ currentSong, isPlaying }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img\r\n        className={isPlaying ? \"rotateSong\" : \"\"}\r\n        src={currentSong.cover}\r\n        alt=\"\"\r\n      />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;","import React from 'react';\r\n\r\n\r\nconst LibrarySong = ({song, songs , setCurrentSong,id,audioRef,isPlaying,setSongs}) =>{\r\n    const songSelectHandler = async () =>{\r\n        const newSongs = songs.map((song)=>{\r\n            if(song.id === id)\r\n            {\r\n                return{\r\n                    ...song,\r\n                    active:true,\r\n                }\r\n            }\r\n            else{\r\n                return{\r\n                    ...song,\r\n                    active:false, \r\n                }\r\n            }\r\n        })\r\n        await setSongs(newSongs);\r\n        await setCurrentSong(song);\r\n        if (isPlaying) audioRef.current.play();\r\n        \r\n\r\n    }\r\n    return(\r\n        <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : \"\"}`}>\r\n            <img alt = {song.name} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n            <h3>{song.name}</h3>\r\n            <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n \r\nexport default LibrarySong; ","import React from \"react\";\r\nimport LibrarySong from './LibrarySong'\r\n\r\nconst Library = ({songs ,setCurrentSong,audioRef,isPlaying,setSongs,LibraryStatus}) => {\r\n\r\n    return(\r\n        <div className = {`library ${LibraryStatus ? 'active-library' : ''}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-songs\">\r\n                {songs.map((song)=>(\r\n                    <LibrarySong id = {song.id} key={song.id} \r\n                    songs ={songs} song = {song} \r\n                    setCurrentSong={setCurrentSong}\r\n                    audioRef={audioRef}\r\n                    isPlaying={isPlaying}\r\n                    setSongs={setSongs}/>\r\n                ))} \r\n                {/* react req to pass id with a key */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMusic} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ setLibraryStatus, LibraryStatus }) => {\r\n    const openLibraryHandler = () => {\r\n      setLibraryStatus(!LibraryStatus);\r\n    };\r\n  \r\n    return (\r\n      <nav> \r\n        <h1>OST</h1> \r\n        <button\r\n          className={LibraryStatus ? \"library-active\" : \"\"}\r\n          onClick={openLibraryHandler}\r\n        >\r\n          Library\r\n          <FontAwesomeIcon icon={faMusic}/>\r\n        </button>\r\n      </nav>\r\n    );\r\n  };\r\n\r\nexport default Nav;","import {v4 as uuid4} from \"uuid\";\r\n\r\nfunction chillHop(){\r\n    return [{\r\n        name:\"Sasuke Theme\",\r\n        cover:\"https://i1.sndcdn.com/avatars-Usqk4LGpYXVVdBKA-zaXnTw-t500x500.jpg\",\r\n        artist:\"Gabriele Motta.\",\r\n        audio:\"https://ia800602.us.archive.org/33/items/jamendo-097169/03.mp3\",\r\n        color:[\"#593CF6\",\"#000004\"],\r\n        id:uuid4(),\r\n        active: true,\r\n    },\r\n    {\r\n        name:\"Itachi Theme\",\r\n        cover:\"https://steamuserimages-a.akamaihd.net/ugc/1469814968704246734/1A415CA573BAD278A3C18DCBD9E020E9CF25EEE2/?imw=512&&ima=fit&impolicy=Letterbox&imcolor=%23000000&letterbox=false\",\r\n        artist:\"Yasuharu Takanashi\",\r\n        audio:\"https://ia800602.us.archive.org/33/items/jamendo-097169/10.mp3\",\r\n        color:[\"#82112B\",\"#24070E\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    },{\r\n        name: \"Pain Theme\",\r\n        cover:\"https://i.pinimg.com/originals/35/92/96/3592963b238b97cce01e0a8e3ac1299a.jpg\",\r\n        artist:\"Girei\",\r\n        audio:\"https://archive.org/download/jamendo-097169/05.mp3\",\r\n        color:[\"#865C9D\",\"#5C0B20\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    },{\r\n        name: \"Akatsuki Theme\",\r\n        cover:\"https://i1.sndcdn.com/artworks-000245800546-opvohx-t500x500.jpg\",\r\n        artist:\"Yasuharu Takanashi\",\r\n        audio:\"https://ia800602.us.archive.org/33/items/jamendo-097169/01.mp3\",\r\n        color:[\"#B91416\",\"#000000\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    },{\r\n        name: \"Orochimaru Theme\",\r\n        cover:\"https://i1.sndcdn.com/artworks-000601204597-0h1cjx-t500x500.jpg\",\r\n        artist:\" Toshio Masuda\",\r\n        audio:\"https://archive.org/download/jamendo-097169/06.mp3\",\r\n        color:[\"#0F0025\",\"#2F0353\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    },{\r\n        name: \"Battle Music\",\r\n        cover:\"https://i1.sndcdn.com/artworks-000664760932-dt728h-t500x500.jpg\",\r\n        artist:\"Naruto\",\r\n        audio:\"https://archive.org/download/jamendo-097169/15.mp3\",\r\n        color:[\"#9D66F3\",\"#FCFF8E\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    },{\r\n        name: \"Grief and Sorrow\",\r\n        cover:\"https://i1.sndcdn.com/artworks-000061522573-g247da-t500x500.jpg\",\r\n        artist:\"Marioverehrer\",\r\n        audio:\"https://archive.org/download/jamendo-097169/19.mp3\",\r\n        color:[\"#F1F083\",\"#F3DB7B\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    },{\r\n        name: \"Peaceful Theme\",\r\n        cover:\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSEMoWd8v-zQ-LVj0TtUHgm8UMWCt32XtYPqA&usqp=CAU\",\r\n        artist:\"RMaster\",\r\n        audio:\"https://archive.org/download/jamendo-097169/12.mp3\",\r\n        color:[\"#523525\",\"#2F4930\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    },\r\n    \r\n        \r\n    {\r\n        name:\"Bekhayali\",\r\n        artist :\"Sachet Tandon\",\r\n        cover:\"https://pagalfree.com/images/128Bekhayali%20-%20Kabir%20Singh%20128%20Kbps.jpg\",\r\n        audio:\"https://pagalfree.com/musics/128-Bekhayali%20-%20Kabir%20Singh%20128%20Kbps.mp3\",\r\n        color:[\"#CBCBD7\",\"#8D6E54\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    },\r\n    {\r\n        name:\"Mera Intkaam Dekhegi\",\r\n        artist :\"Krishna Berua\",\r\n        cover:\"https://pagalsong.in/uploads//thumbnails/300x300/id3Picture_396809156.jpg\",\r\n        audio:\"https://pagalsong.in/uploads/systemuploads/mp3/Shaadi Mein Zaroor Aana/Mera Intkam Dekhegi (Shaadi Mein Zaroor Aana) 128 Kbps.mp3\",\r\n        color:[\"#EA87E1\",\"#801E25\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    },\r\n    {\r\n        name:\"Tera Ban Jaunga\",\r\n        artist :\"Tulsi Kumar, Akhil Sachdeva\",\r\n        cover:\"https://www.pinkvilla.com/files/styles/contentpreview/public/tera-ban-jaunga-kabir-singh-main.jpg?itok=mpX3EIp_\",\r\n        audio:\"https://pagalfree.com/musics/128-Tera Ban Jaunga - Kabir Singh 128 Kbps.mp3\",\r\n        color:[\"#CBCBD7\",\"#8D6E54\"],\r\n        id:uuid4(),\r\n        active: false,\r\n    }];\r\n}; \r\n\r\nexport default chillHop;","import React ,{useState,useRef} from 'react';\n//importing styles\nimport './styles/app.scss';\n//importing components\nimport Player from './components/Player';\nimport Song from './components/Song';\nimport Library from './components/Library';\nimport Nav from './components/Nav';\n//import data\nimport data from \"./data\";\nfunction App() {\n  //Ref\n  const audioRef = useRef(null);\n  //State\n  const [songs,setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying , setisPlaying] = useState(false);\n  const [songInfo, setsongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercent:0, \n});\n  const [LibraryStatus, setLibraryStatus] = useState(false);\n  const timeUpdateHandler = (e) =>{\n  const current = e.target.currentTime;\n  const duration = e.target.duration;\n  const animation = Math.round((current)*100/(duration));\n  \n  setsongInfo({...songInfo,\n    currentTime:current, \n    duration:duration,\n  animationPercent:animation})\n};\nconst  songEndHandler = async () =>{\n  let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n  \n  \n      await setCurrentSong(songs[(currentIndex+1) % songs.length]);\n      if(isPlaying) audioRef.current.play() \n}\n  return (\n    <div className={`App ${LibraryStatus ? \"library-active\" :\"\"}`}>\n      <Nav LibraryStatus={LibraryStatus} setLibraryStatus={setLibraryStatus}/>\n     <Song currentSong={currentSong} isPlaying={isPlaying}/>\n     <Player \n     audioRef={audioRef}\n      setisPlaying={setisPlaying}\n      isPlaying={isPlaying} \n      currentSong={currentSong}\n      setsongInfo={setsongInfo}\n      songInfo={songInfo}\n      songs={songs}\n      setCurrentSong={setCurrentSong}\n      setSongs={setSongs}/>\n      <Library songs = {songs} setCurrentSong={setCurrentSong}\n      audioRef={audioRef}\n      isPlaying={isPlaying}\n      setSongs={setSongs}\n      LibraryStatus={LibraryStatus}/>\n      <audio \n             onLoadedMetadata={timeUpdateHandler}\n             onTimeUpdate={timeUpdateHandler} \n             ref={audioRef}\n              src={currentSong.audio}\n              onEnded={songEndHandler}\n              ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}